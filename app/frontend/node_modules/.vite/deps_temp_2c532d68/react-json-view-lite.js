import {
  require_react
} from "./chunk-AXJ2GJWQ.js";
import {
  __toESM
} from "./chunk-TCQZMY3T.js";

// node_modules/react-json-view-lite/dist/index.modern.js
var import_react = __toESM(require_react());
var isBoolean = function isBoolean2(data) {
  return typeof data === "boolean" || data instanceof Boolean;
};
var isNumber = function isNumber2(data) {
  return typeof data === "number" || data instanceof Number;
};
var isBigInt = function isBigInt2(data) {
  return typeof data === "bigint" || data instanceof BigInt;
};
var isString = function isString2(data) {
  return typeof data === "string" || data instanceof String;
};
var isArray = function isArray2(data) {
  return Array.isArray(data);
};
var isObject = function isObject2(data) {
  return data instanceof Object && data !== null;
};
function useBool(initialValueCreator) {
  var _useState = (0, import_react.useState)(initialValueCreator()), value = _useState[0], setValue = _useState[1];
  var tooggle = function tooggle2() {
    return setValue(function(currentValue) {
      return !currentValue;
    });
  };
  return [value, tooggle, setValue];
}
var expandedIcon = "▾";
var collapsedIcon = "▸";
function combineStyles(style1, style2) {
  return (style1 || "") + " " + (style2 || "");
}
function renderExpandableObject(_ref) {
  var field = _ref.field, value = _ref.value, data = _ref.data, lastElement = _ref.lastElement, openBracket = _ref.openBracket, closeBracket = _ref.closeBracket, level = _ref.level, style = _ref.style, shouldInitiallyExpand = _ref.shouldInitiallyExpand;
  var shouldInitiallyExpandCalledRef = (0, import_react.useRef)(false);
  var _useBool = useBool(function() {
    return shouldInitiallyExpand(level, value, field);
  }), expanded = _useBool[0], toggleExpanded = _useBool[1], setExpanded = _useBool[2];
  (0, import_react.useEffect)(function() {
    if (!shouldInitiallyExpandCalledRef.current) {
      shouldInitiallyExpandCalledRef.current = true;
    } else {
      setExpanded(shouldInitiallyExpand(level, value, field));
    }
  }, [shouldInitiallyExpand]);
  var expandIcon = expanded ? expandedIcon : collapsedIcon;
  var childLevel = level + 1;
  var lastIndex = data.length - 1;
  var onKeyDown = function onKeyDown2(e) {
    if (e.key === " ") {
      toggleExpanded();
    }
  };
  return (0, import_react.createElement)("div", {
    className: style.basicChildStyle,
    role: "list"
  }, (0, import_react.createElement)("span", {
    className: combineStyles(style.expander, style.pointer),
    role: "button",
    onClick: toggleExpanded,
    onKeyDown,
    tabIndex: 0
  }, expandIcon), field && (0, import_react.createElement)("span", {
    className: style.label
  }, field, ":"), (0, import_react.createElement)("span", {
    className: style.punctuation
  }, openBracket), expanded ? (0, import_react.createElement)("div", null, data.map(function(dataElement, index) {
    return (0, import_react.createElement)(DataRender, {
      key: dataElement[0] || index,
      field: dataElement[0],
      value: dataElement[1],
      style,
      lastElement: index === lastIndex,
      level: childLevel,
      shouldInitiallyExpand
    });
  })) : (0, import_react.createElement)("span", {
    className: combineStyles(style.punctuation, style.pointer),
    role: "button",
    tabIndex: 0,
    onClick: toggleExpanded,
    onKeyDown
  }, "..."), (0, import_react.createElement)("span", {
    className: style.punctuation
  }, closeBracket), !lastElement && (0, import_react.createElement)("span", {
    className: style.punctuation
  }, ","));
}
function JsonObject(_ref2) {
  var field = _ref2.field, value = _ref2.value, style = _ref2.style, lastElement = _ref2.lastElement, shouldInitiallyExpand = _ref2.shouldInitiallyExpand, level = _ref2.level;
  return renderExpandableObject({
    field,
    value,
    lastElement: lastElement || false,
    level,
    openBracket: "{",
    closeBracket: "}",
    style,
    shouldInitiallyExpand,
    data: Object.keys(value).map(function(key) {
      return [key, value[key]];
    })
  });
}
function JsonArray(_ref3) {
  var field = _ref3.field, value = _ref3.value, style = _ref3.style, lastElement = _ref3.lastElement, level = _ref3.level, shouldInitiallyExpand = _ref3.shouldInitiallyExpand;
  return renderExpandableObject({
    field,
    value,
    lastElement: lastElement || false,
    level,
    openBracket: "[",
    closeBracket: "]",
    style,
    shouldInitiallyExpand,
    data: value.map(function(element) {
      return [void 0, element];
    })
  });
}
function JsonPrimitiveValue(_ref4) {
  var field = _ref4.field, value = _ref4.value, style = _ref4.style, lastElement = _ref4.lastElement;
  var stringValue = value;
  var valueStyle = style.otherValue;
  if (value === null) {
    stringValue = "null";
    valueStyle = style.nullValue;
  } else if (value === void 0) {
    stringValue = "undefined";
    valueStyle = style.undefinedValue;
  } else if (isString(value)) {
    stringValue = '"' + value + '"';
    valueStyle = style.stringValue;
  } else if (isBoolean(value)) {
    stringValue = value ? "true" : "false";
    valueStyle = style.booleanValue;
  } else if (isNumber(value)) {
    stringValue = value.toString();
    valueStyle = style.numberValue;
  } else if (isBigInt(value)) {
    stringValue = value.toString() + "n";
    valueStyle = style.numberValue;
  } else {
    stringValue = value.toString();
  }
  return (0, import_react.createElement)("div", {
    className: style.basicChildStyle,
    role: "listitem"
  }, field && (0, import_react.createElement)("span", {
    className: style.label
  }, field, ":"), (0, import_react.createElement)("span", {
    className: valueStyle
  }, stringValue), !lastElement && (0, import_react.createElement)("span", {
    className: style.punctuation
  }, ","));
}
function DataRender(props) {
  var value = props.value;
  if (isArray(value)) {
    return (0, import_react.createElement)(JsonArray, Object.assign({}, props));
  }
  if (isObject(value)) {
    return (0, import_react.createElement)(JsonObject, Object.assign({}, props));
  }
  return (0, import_react.createElement)(JsonPrimitiveValue, Object.assign({}, props));
}
var styles = { "container-base": "_GzYRV", "punctuation-base": "_3eOF8", "expander-base": "_f10Tu", "pointer": "_1MFti", "container-light": "_2IvMF _GzYRV", "expander-light": "_16FAf _f10Tu", "basic-element-style": "_2bkNM", "label-light": "_1MGIk", "punctuation-light": "_3uHL6 _3eOF8", "value-null-light": "_2T6PJ", "value-undefined-light": "_1Gho6", "value-string-light": "_vGjyY", "value-number-light": "_1bQdo", "value-boolean-light": "_3zQKs", "value-other-light": "_1xvuR", "container-dark": "_11RoI _GzYRV", "expander-dark": "_3cpys _f10Tu", "label-dark": "_2bSDX", "punctuation-dark": "_gsbQL _3eOF8", "value-null-dark": "_LaAZe", "value-undefined-dark": "_GTKgm", "value-string-dark": "_Chy1W", "value-number-dark": "_2bveF", "value-boolean-dark": "_2vRm-", "value-other-dark": "_1prJR" };
var defaultStyles = {
  container: styles["container-light"],
  basicChildStyle: styles["basic-element-style"],
  label: styles["label-light"],
  nullValue: styles["value-null-light"],
  undefinedValue: styles["value-undefined-light"],
  stringValue: styles["value-string-light"],
  booleanValue: styles["value-boolean-light"],
  numberValue: styles["value-number-light"],
  otherValue: styles["value-other-light"],
  expander: styles["expander-light"],
  punctuation: styles["punctuation-light"],
  pointer: styles.pointer
};
var darkStyles = {
  container: styles["container-dark"],
  basicChildStyle: styles["basic-element-style"],
  label: styles["label-dark"],
  nullValue: styles["value-null-dark"],
  undefinedValue: styles["value-undefined-dark"],
  stringValue: styles["value-string-dark"],
  booleanValue: styles["value-boolean-dark"],
  numberValue: styles["value-number-dark"],
  otherValue: styles["value-other-dark"],
  expander: styles["expander-dark"],
  punctuation: styles["punctuation-dark"],
  pointer: styles.pointer
};
var allExpanded = function allExpanded2() {
  return true;
};
var collapseAllNested = function collapseAllNested2(level) {
  return level < 1;
};
var JsonView = function JsonView2(_ref) {
  var data = _ref.data, _ref$style = _ref.style, style = _ref$style === void 0 ? defaultStyles : _ref$style, _ref$shouldInitiallyE = _ref.shouldInitiallyExpand, shouldInitiallyExpand = _ref$shouldInitiallyE === void 0 ? allExpanded : _ref$shouldInitiallyE;
  return (0, import_react.createElement)("div", {
    className: style.container
  }, (0, import_react.createElement)(DataRender, {
    value: data,
    style,
    lastElement: true,
    level: 0,
    shouldInitiallyExpand
  }));
};
export {
  JsonView,
  allExpanded,
  collapseAllNested,
  darkStyles,
  defaultStyles
};
//# sourceMappingURL=react-json-view-lite.js.map
